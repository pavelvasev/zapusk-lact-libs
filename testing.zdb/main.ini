#################### params
# info
args=
code=
comment={{info}}
info=

#################### main
# [info]
# testing=TESTING: {{comment}} [{{code}}]
#testing=TESTING:{`echo $ZAPUSK_TESTING_CONTEXT`} {{info}}
#testing=<TESTING> { "id":"{{id}}", "comment":"{{comment}}", "args": "{{args}}" } </TESTING>

#testing=<TESTING code="{{code}}" comment="{{comment}}">{{args}}</TESTING>
testing2="
<TESTING>
- code: {{code}}
  comment: {{comment}}
  {-`gather-args`-}
  args: {{args}}
</TESTING>
"
# [os]
# testing=report.sh

# это экспериментально на будущее
# будущее наступило
[rb]
testing="
  h = { "code" => self.params["code"], "comment" => self.params["comment"], "guid" => self.global_name }

  notestr=""
  self.params.each do |k,v|
    if k =~ /^arg_(.+)$/
      # это наш параметр
      nama = $1
      # nama имя, v - значение
      
      # в zapusk значение может быть списком через пробел.
      # наивно поправим это
      if v.is_a?(String) && nama =~ /list/
        arr = v.split(/\s+/)
        if arr.length > 0
          v = arr
        end
      end
      
      qarr = v.is_a?(Array) ? v : [v]

      h[nama] = v

      # теперь строчку накопим
      
      qarr.each do |qv|
        # экранирование символов "
        av = qv.gsub( /"/,"\\\"" )
        notestr << "\"#{nama}=#{av}\" "
      end
    end
  end
#  notestr << "guid=\"#{self.global_name}\""

  #self.info "TESTING: #{self.params["comment"]} [#{self.params["code"]}] #{notestr}"
  testing_string="(testing \"#{self.params["comment"]}\" \"#{self.params["code"]}\" #{notestr})"
  #testing_string="testing #{self.params["comment"]} #{notestr}"
  self.info testing_string

#  puts "<<testing"

  #require "json"
  #k_no_header = JSON.generate( h )
#  puts k_no_header
  #puts [h].to_yaml
#  puts "testing>>"
  if ENV["TESTING_YAML"]
    require "yaml"
    k = YAML::dump([h],:line_width => 1024)
    k_no_header = k[4..-1]
    ii = ENV["TESTING_YAML"].to_i
    io = IO.new(ii,"wt",:autoclose=>false)
    io.puts k_no_header
    io.puts
    io.close
    #YAML::dump([h], io, :line_width => 1024)
    #end
  end
  if ENV["TESTING_LISP"]
    notestr << "guid=\"#{self.global_name}\""
    testing_string2="(testing \"#{self.params["comment"]}\" \"#{self.params["code"]}\" #{notestr})"
    # testing_string2=testing_string
  
    ii = ENV["TESTING_LISP"].to_i
    io = IO.new(ii,"wt",:autoclose=>false)
    io.puts if (self.params["code"] || "") =~ /context-begin/
    io.puts testing_string2
    io.puts if (self.params["code"] || "") =~ /context-finish/
    
    io.close
    #YAML::dump([h], io, :line_width => 1024)
    #end
  end
  if ENV["TESTING_TEXT"]
    #notestr << "guid=\"#{self.global_name}\""
    testing_string2="* #{self.params["comment"]} #{notestr}"
  
    ii = ENV["TESTING_TEXT"].to_i
    io = IO.new(ii,"wt",:autoclose=>false)
    
    io.puts if (self.params["code"] || "") =~ /context-begin/
    io.puts testing_string2
    io.puts if (self.params["code"] || "") =~ /context-finish/
    
    if (self.params["code"] || "").length == 0
      io.puts "^^^^^^^^^^^^^^^^^^^^^^^^^^^"
    end    
    
    io.close
    #YAML::dump([h], io, :line_width => 1024)
    #end
  end  
  
"
