####### params
content=
path=/etc/nginx/sites-enabled/{{global_name}}
backup_path={{state_dir}}/nginx-zapusk-backup
# backup_path это файл, куда мы скопируем оригинальный затираемый нами файл в конфигах nginx
# и восстановим его, если наш новый конфиг коряв
# важно что backup_path находится внутри state_dir а не рядом с файлом nginx-конфигов
# т.к. там может оказаться дублирование location-ов или серверов или еще чего
# (нжинкс загрузит и наш новый и бэкап старого, *)

####### check-conf-is-valid
[info]
apply=Checking current nginx config
[os]
apply=nginx -t || (rm -f {{path}}; echo "NGINX CONFIG IS ALREADY BROKEN! repair it!"; exit 200)

###### backup-original-file
[os]
apply=(test -f {{path}} && cp {{path}} {{backup_path}}) || echo "backup: {{path}} not exist"

####### write-conf
[commands]
apply

[info]
apply=Writing and checking nginx config item: {{path}}
destroy=Removing nginx config item: {{path}}

[file]
path={{path}}
content={{content}}

####### check-written-conf
[os]
apply=nginx -t || (cat {{path}}; (test -f {{backup_path}} && mv {{backup_path}} {{path}}) || rm -f {{path}}; echo "THIS CONFIG WILL BREAK NGINX! broken file is now recovered/removed, zapusk execution is stopped."; exit 200)
# тут конечно глюк - если cp ломается, то файл удаляют.. странно это все

################## schedule-reload
#[defer]
#key=nginx-reload
[os]
apply=echo nginx-reload=/etc/init.d/nginx reload >>$ZAPUSK_DEFERRED_PATH
#destroy=/etc/init.d/nginx reload
destroy=echo nginx-reload=/etc/init.d/nginx reload >>$ZAPUSK_DEFERRED_PATH
